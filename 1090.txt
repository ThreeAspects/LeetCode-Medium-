class Solution {
    class My{
        int value,label;
        public My(int value,int label){
            this.value=value;
            this.label=label;
        }
    }
    public int largestValsFromLabels(int[] values, int[] labels, int num_wanted, int use_limit) {
        PriorityQueue<My> heap=new PriorityQueue<>(
            (m1,m2)->m2.value-m1.value
        );
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<values.length;i++){
            heap.add(new My(values[i],labels[i]));
            map.put(labels[i],0);
        }
        int sum=0;
        while(heap.size()>0&&num_wanted>0){
            My m=heap.poll();
            int label=m.label;
            if(map.get(label)>=use_limit){
                continue;
            }
            sum+=m.value;
            map.put(label,map.get(label)+1);
            num_wanted--;
        }
        return sum;
    }
}