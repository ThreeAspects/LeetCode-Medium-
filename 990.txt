class Solution {
    int[] parent = new int[26];
    public int find(int root){
        if(parent[root]!=root){
            parent[root]=find(parent[root]);
        }
        return parent[root];
    }
    public void union(int a,int b){
        parent[find(b)] = find(a);
    }
    public boolean equationsPossible(String[] equations) {       
        for(int i=0 ; i<26 ; i++){
            parent[i] = i;
        }
        List<String> uneqList = new ArrayList<>();
        for(String eq : equations){
            if(eq.substring(1,3).equals("==")){
                int a = eq.charAt(0)-'a';
                int b = eq.charAt(3)-'a';
                union(a,b);
            } else{
                uneqList.add(eq);
            }
        }
        for(String eq : uneqList){
            int a = eq.charAt(0)-'a';
            int b = eq.charAt(3)-'a';
            if(find(a)==find(b)){
                return false;
            }
        }
        return true;
    }
}