思路
找到当前元素左边第一个比它小的元素，果断单调递减栈，从右往前遍历。
ps 单调栈应用范围
求解数组中元素右边第一个比它小的元素的下标，从前往后，构造单调递增栈；
求解数组中元素右边第一个比它大的元素的下标，从前往后，构造单调递减栈；
求解数组中元素左边第一个比它小的元素的下标，从后往前，构造单调递减栈；
求解数组中元素左边第一个比它大的元素的下标，从后往前，构造单调递增栈。

class Solution {
    public int maxWidthRamp(int[] A) {
        Stack<Integer> stacks = new Stack<>();
        stacks.push(0);
        int length = A.length;
        for (int i = 1; i < length; i++) {
            if (A[i] <= A[stacks.peek()]) {
                stacks.push(i);
            }
        }
        int max = 0;
        for (int i = length - 1; i >= 0; i--) {
            while (!stacks.isEmpty() && A[i] >= A[stacks.peek()]) {
                max = Math.max(max, i - stacks.pop());
            }
        }
        return max;
    }
}
