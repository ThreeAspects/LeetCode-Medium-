并查集
另一种统计图中连通块数量的方法是使用并查集。方法很简单。
使用一个大小为 NN 的 parentparent 数组，遍历这个图，每个节点我们都遍历所有相邻点，并让相邻点指向它，
并设置成一个由 parentparent 节点决定的单独组。这个过程被称为 unionunion。
这样每个组都有一个唯一的 parentparent 节点，这些节点的父亲为 -1。
对于每对新节点，我们找寻他们的父亲。如果父亲节点一样，那么什么都不做他们已经是一个组里。
如果父亲不同，说明他们仍然需要合并。因此，将他们的父亲合并，也就是 parent\big[parent[x]\big]=parent[y]parent[parent[x]]=parent[y]，
这样就让他们在一个组里了。
public class Solution {
    int find(int parent[], int i) {
        if (parent[i] == -1)
            return i;
        return find(parent, parent[i]);
    }
    void union(int parent[], int x, int y) {
        int xset = find(parent, x);
        int yset = find(parent, y);
        if (xset != yset)
            parent[xset] = yset;
    }
    public int findCircleNum(int[][] M) {
        int[] parent = new int[M.length];
        Arrays.fill(parent, -1);
        for (int i = 0; i < M.length; i++) {
            for (int j = 0; j < M.length; j++) {
                if (M[i][j] == 1 && i != j) {
                    union(parent, i, j);
                }
            }
        }
        int count = 0;
        for (int i = 0; i < parent.length; i++) {
            if (parent[i] == -1)
                count++;
        }
        return count;
    }
}
