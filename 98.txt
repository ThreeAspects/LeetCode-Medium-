/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
        if(root==null) return true;
        if(f(root)){
            boolean l=true,r=true;
            if(root.left!=null){
                l=getMax(root.left).val<root.val;
            }
            if(root.right!=null){
                r=getMin(root.right).val>root.val;
            }
            return l&&r;
        }else{
            return false;
        }
    }
    public TreeNode getMin(TreeNode root){
        if(root.left==null){
            return root;
        }
        return getMax(root.left);
    }
    public TreeNode getMax(TreeNode root){
        if(root.right==null){
            return root;
        }
        return getMax(root.right);
    }
    public boolean f(TreeNode root){
        if(root==null) return true;
        boolean left=isValidBST(root.left);
        boolean right=isValidBST(root.right);
        if(left&&right){
            if(root.left==null&&root.right==null){
            return true;
        }else if(root.left!=null&&root.right==null){
            if(root.val>root.left.val){
                return true;
            }else{
                return false;
            }
        }else if(root.left==null&&root.right!=null){
            if(root.val<root.right.val){
                return true;
            }else{
                return false;
            }
        }else{
            if(root.val>root.left.val&&root.val<root.right.val){
                return true;
            }else{
                return false;
            }
        }
        }else{
            return false;
        }
    }
}