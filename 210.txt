class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] re=new int[numCourses];
        if(prerequisites.length==0){
            for(int i=0;i<numCourses;i++){
                re[i]=i;
            }
            return re;
        }
        Queue<Integer> queue=new LinkedList<>();
        int[] courses=new int[numCourses];
        for(int[] i:prerequisites){
            courses[i[0]]++;
        }
        for(int i=0;i<numCourses;i++){
            if(courses[i]==0){
                queue.offer(i);
            }
        }
        int index=0;
        while(!queue.isEmpty()){
            int course=queue.poll();
            numCourses--;
            re[index++]=course;
            for(int[] i:prerequisites){
                if(i[1]!=course) continue;
                if(--courses[i[0]]==0) queue.offer(i[0]);
            }
        }
        if(numCourses!=0){
            return new int[0];
        }
        return re;
    }
}