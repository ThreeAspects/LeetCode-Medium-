class Solution {
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        Queue<String> queue=new LinkedList<>();
        Set<String> set=new HashSet<>();
        queue.offer(beginWord);
        int count=1;
        while(!queue.isEmpty()){
            int size=queue.size();
            count++;
            while(size>0){
                String tag=queue.poll();
                size--;
                for(String word:wordList){
                    if(set.contains(word)) continue;
                    if(check(word,tag)){
                        if(word.equals(endWord)){
                            return count;
                        }else{
                            set.add(word);
                            queue.offer(word);
                        }
                    }
                }
            }
        }
        return 0;
    }
    public boolean check(String str1,String str2){
        int count=0;
        for(int i=0;i<str1.length();i++){
            if(str1.charAt(i)!=str2.charAt(i)){
                count++;
            }
        }
        return count==1;
    }
}