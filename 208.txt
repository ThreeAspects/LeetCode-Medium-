class Trie {
    Node root;
    /** Initialize your data structure here. */
    public Trie() {
        root=new Node();
    }
    /** Inserts a word into the trie. */
    public void insert(String s) {
        Node cur = root;
        for(int i = 0;i < s.length();i++){
            char c = s.charAt(i);
            if(cur.map.get(c) == null)
                cur.map.put(c, new Node());
            cur = cur.map.get(c);
        }
        cur.isWord = true;
    }
    /** Returns if the word is in the trie. */
    public boolean search(String s) {
        Node cur = root;
        for(int i = 0;i < s.length();i++){
            char c = s.charAt(i);
            if(cur.map.get(c) == null)
                return false;
            cur = cur.map.get(c);
        }
        return cur.isWord;
    }
    /** Returns if there is any word in the trie that starts with the given prefix. */
    public boolean startsWith(String s) {
        Node cur = root;
        for(int i = 0;i < s.length();i++){
            char c = s.charAt(i);
            if(cur.map.get(c) == null)
                return false;
            cur = cur.map.get(c);
        }
        return true;
    }
}
class Node{
    public boolean isWord;
    public HashMap<Character,Node> map;
    public Node(){
        this.isWord = false;
        this.map = new HashMap<>();
    }
}
/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */