class Solution {
    public int[][] intervalIntersection(int[][] A, int[][] B) {
        List<List<Integer>> list=new ArrayList<>();
        int left=-1,right=-1;
        for(int i=0,j=0;i<A.length&&j<B.length;){
            int aleft=A[i][0],aright=A[i][1];
            int bleft=B[j][0],bright=B[j][1];
            left=Math.max(aleft,bleft);
            right=Math.min(aright,bright);
            if(left<=right){
                List<Integer> t=new ArrayList<>();
                t.add(left);
                t.add(right);
                list.add(new ArrayList<Integer>(t));
                if(aright<bright&&i<A.length-1){
                    i++;
                }else{
                    j++;
                }
            }else if(aleft>bright){
                j++;
            }else{
                i++;
            }
        }
        int[][] re=new int[list.size()][2];
        for(int i=0;i<re.length;i++){
            re[i][0]=list.get(i).get(0);
            re[i][1]=list.get(i).get(1);
        }
        return re;
    }
}